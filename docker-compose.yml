version: "3.10"  # Updated version

services:

  redis:
    image: redis:7.0.11-alpine

  django:
    container_name: django
    build:
      context: .  # Set the context to the current directory
      dockerfile: Dockerfile  # Explicitly specify the location of the Dockerfile if needed
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./:/usr/src/app/  # Mount the core directory to the container
    ports:
      - 8001:8000  # Map port 8000 inside the container to port 8001 on the host
    environment:
      - DEBUG=1
      - SECRET_KEY=9af98s4f4a94f9a4adsf4
      - ALLOWED_HOSTS=localhost,127.0.0.1,django  
    depends_on:
      - redis

  celery:
    container_name: celery1
    build:
      context: .  # Set the context to the current directory
      dockerfile: Dockerfile  # Explicitly specify the location of the Dockerfile if needed
    command: celery --app=core worker -l INFO -Q celery,celery:1,celery:2,celery:3, 
    volumes:
      - ./:/usr/src/app/  # Mount the core directory to the container
    environment:
      - DEBUG=1
      - SECRET_KEY=9af98s4f4a94f9a4adsf4
      - ALLOWED_HOSTS=localhost,127.0.0.1,django  
      - CELERY_BROKER_URL=redis://redis:6379/0  
    depends_on:
      - redis

  # celery2:
  #   container_name: celery2
  #   build:
  #     context: ./celeryWorker  # Set the context to the current directory
  #     dockerfile: Dockerfile  
  #   command: celery --app=celerytask worker -l INFO -Q queue2
  #   volumes:
  #     - ./celeryworker:/usr/src/app/  # Mount the core directory to the container
  #   depends_on:
  #     - redis
  #     - django

      
